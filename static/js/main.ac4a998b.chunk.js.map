{"version":3,"sources":["modifiers.ts","use-modifiers.ts","components/Key.tsx","components/KeyWin.tsx","components/KeyMac.tsx","components/Modifiers.tsx","components/App.tsx","index.tsx"],"names":["Modifier","ModifierWin","ModifierMac","SHIFT","CONTROL","META","ALT","Key","_ref","pressed","className","props","Object","objectWithoutProperties","react","assign","classNames","KeyWin","src_components_Key","KeyWinShift","KeyWin_KeyWin","KeyWinControl","KeyWinAlt","KeyWinWindows","width","height","viewBox","d","KeyMac","KeyMacShift","KeyMac_KeyMac","KeyMacCommand","KeyMacControl","KeyMacOption","Modifiers","modifiers","_React$useState","React","_React$useState2","slicedToArray","isShift","setShift","_React$useState3","_React$useState4","isControl","setControl","_React$useState5","_React$useState6","isAlt","setAlt","_React$useState7","_React$useState8","isMeta","setMeta","handleModifier","e","getModifierState","handleBlur","window","addEventListener","removeEventListener","defineProperty","useModifiers","style","KeyWin_KeyWinShift","KeyWin_KeyWinControl","KeyWin_KeyWinAlt","KeyWin_KeyWinWindows","WINDOWS","KeyMac_KeyMacShift","KeyMac_KeyMacControl","KeyMac_KeyMacOption","OPTION","KeyMac_KeyMacCommand","COMMAND","App","src_components_Modifiers","rootElement","document","getElementById","render","components_App"],"mappings":"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","file":"static/js/main.ac4a998b.chunk.js","sourcesContent":["export enum Modifier {\r\n  SHIFT = 'Shift',\r\n  CONTROL = 'Control',\r\n  META = 'Meta',\r\n  ALT = 'Alt',\r\n}\r\n\r\nexport interface Modifiers {\r\n  [Modifier.SHIFT]: boolean;\r\n  [Modifier.CONTROL]: boolean;\r\n  [Modifier.META]: boolean;\r\n  [Modifier.ALT]: boolean;\r\n}\r\n\r\nexport enum ModifierWin {\r\n  SHIFT = Modifier.SHIFT,\r\n  CONTROL = Modifier.CONTROL,\r\n  WINDOWS = Modifier.META,\r\n  ALT = Modifier.ALT,\r\n}\r\n\r\nexport enum ModifierMac {\r\n  SHIFT = Modifier.SHIFT,\r\n  CONTROL = Modifier.CONTROL,\r\n  COMMAND = Modifier.META,\r\n  OPTION = Modifier.ALT,\r\n}\r\n","import * as React from \"react\";\r\nimport { Modifier, Modifiers } from \"./modifiers\";\r\n\r\nexport const useModifiers = (): Modifiers => {\r\n  const [isShift, setShift] = React.useState(false);\r\n  const [isControl, setControl] = React.useState(false);\r\n  const [isAlt, setAlt] = React.useState(false);\r\n  const [isMeta, setMeta] = React.useState(false);\r\n\r\n  React.useEffect(() => {\r\n    const handleModifier = (e: KeyboardEvent | MouseEvent) => {\r\n      setShift(e.getModifierState(Modifier.SHIFT));\r\n      setControl(e.getModifierState(Modifier.CONTROL));\r\n      setAlt(e.getModifierState(Modifier.ALT));\r\n      setMeta(e.getModifierState(Modifier.META));\r\n    };\r\n    const handleBlur = () => {\r\n      setShift(false);\r\n      setControl(false);\r\n      setAlt(false);\r\n      setMeta(false);\r\n    };\r\n    window.addEventListener(\"keydown\", handleModifier);\r\n    window.addEventListener(\"keyup\", handleModifier);\r\n    window.addEventListener(\"blur\", handleBlur);\r\n    return () => {\r\n      window.removeEventListener(\"keydown\", handleModifier);\r\n      window.removeEventListener(\"keyup\", handleModifier);\r\n      window.removeEventListener(\"blur\", handleBlur);\r\n    };\r\n  });\r\n\r\n  return {\r\n    [Modifier.SHIFT]: isShift,\r\n    [Modifier.CONTROL]: isControl,\r\n    [Modifier.ALT]: isAlt,\r\n    [Modifier.META]: isMeta,\r\n  };\r\n};\r\n","import * as React from 'react';\nimport classNames from 'classnames';\nimport './Key.css';\n\nexport interface Props extends React.HTMLAttributes<HTMLDivElement> {\n  pressed: boolean;\n}\n\nconst Key: React.FC<Props> = ({ pressed, className, ...props }) => (\n  <div className={classNames('Key', pressed && 'Key--pressed', className)} {...props} />\n);\n\nexport default Key;\n","import * as React from 'react';\nimport classNames from 'classnames';\nimport Key, { Props } from './Key';\nimport './KeyWin.css';\n\nconst KeyWin: React.FC<Props> = ({ className, ...props }) => (\n  <Key className={classNames('KeyWin', className)} {...props} />\n);\n\nconst KeyWinShift: React.FC<Props> = (props) => (\n  <KeyWin className=\"KeyWinShift\" {...props}>\n    <span className=\"Key-text\">\n      Shift\n    </span>\n  </KeyWin>\n);\n\nconst KeyWinControl: React.FC<Props> = (props) => (\n  <KeyWin className=\"KeyWinControl\" {...props}>\n    <span className=\"Key-text\">\n      Ctrl\n    </span>\n  </KeyWin>\n);\n\nconst KeyWinAlt: React.FC<Props> = (props) => (\n  <KeyWin className=\"KeyWinAlt\" {...props}>\n    <span className=\"Key-text\">\n      Alt\n    </span>\n  </KeyWin>\n);\n\nconst KeyWinWindows: React.FC<Props> = (props) => (\n  <KeyWin className=\"KeyWinWindows\" {...props}>\n    <svg className=\"Key-symbol\" width={64} height={64} viewBox=\"0 0 64 64\">\n      <path\n        d=\"M.022 32L0 12.495l24-3.259V32zM28 8.655L59.992 4v28H28zM60 36l-.008 28L28 59.499V36zM24 58.99L.02 55.703.019 36h23.982z\"\n      />\n    </svg>\n  </KeyWin>\n);\n\nexport {\n  KeyWinShift,\n  KeyWinControl,\n  KeyWinAlt,\n  KeyWinWindows,\n};\n","import * as React from 'react';\nimport classNames from 'classnames';\nimport Key, { Props } from './Key';\nimport './KeyMac.css';\n\nconst KeyMac: React.FC<Props> = ({ className, ...props }) => (\n  <Key className={classNames('KeyMac', className)} {...props} />\n);\n\nconst KeyMacShift: React.FC<Props> = (props) => (\n  <KeyMac className=\"KeyMacShift\" {...props}>\n    <span className=\"Key-text\">\n      Shift\n    </span>\n  </KeyMac>\n);\n\nconst KeyMacCommand: React.FC<Props> = (props) => (\n  <KeyMac className=\"KeyMacCommand\" {...props}>\n    <span className=\"Key-text\">\n      Command\n    </span>\n    <svg className=\"Key-symbol\" width={64} height={64} viewBox=\"0 0 64 64\">\n      <path\n        d=\"M46 56c-5.514 0-10-4.486-10-10v-6h-8v6c0 5.514-4.486 10-10 10s-10-4.486-10-10 4.486-10 10-10h6v-8h-6c-5.514 0-10-4.486-10-10s4.486-10 10-10 10 4.486 10 10v6h8v-6c0-5.514 4.486-10 10-10s10 4.486 10 10-4.486 10-10 10h-6v8h6c5.514 0 10 4.486 10 10s-4.486 10-10 10zM40 40v6c0 3.308 2.692 6 6 6s6-2.692 6-6-2.692-6-6-6h-6zM18 40c-3.308 0-6 2.692-6 6s2.692 6 6 6 6-2.692 6-6v-6h-6zM28 36h8v-8h-8v8zM40 24h6c3.308 0 6-2.692 6-6s-2.692-6-6-6-6 2.692-6 6v6zM18 12c-3.308 0-6 2.692-6 6s2.692 6 6 6h6v-6c0-3.308-2.692-6-6-6z\"\n      />\n    </svg>\n  </KeyMac>\n);\n\nconst KeyMacControl: React.FC<Props> = (props) => (\n  <KeyMac className=\"KeyMacControl\" {...props}>\n    <span className=\"Key-text\">\n      Control\n    </span>\n    <svg className=\"Key-symbol\" width={64} height={64} viewBox=\"0 0 64 64\">\n      <path\n        d=\"M46.001 28a1.994 1.994 0 01-1.506-.683L32 13.037l-12.495 14.28a2 2 0 11-3.01-2.634l14-16a2 2 0 013.01 0l14 16A2 2 0 0146.001 28z\"\n      />\n    </svg>\n  </KeyMac>\n);\n\nconst KeyMacOption: React.FC<Props> = (props) => (\n  <KeyMac className=\"KeyMacOption\" {...props}>\n    <span className=\"Key-text\">\n      Option\n    </span>\n    <svg className=\"Key-symbol\" width={64} height={64} viewBox=\"0 0 64 64\">\n      <path\n        d=\"M58 52H42a2 2 0 01-1.828-1.188L24.7 16H6a2 2 0 010-4h20c.79 0 1.507.466 1.828 1.188L43.3 48H58a2 2 0 110 4zM58 16H38a2 2 0 010-4h20a2 2 0 010 4z\"\n      />\n    </svg>\n  </KeyMac>\n);\n\nexport {\n  KeyMacShift,\n  KeyMacCommand,\n  KeyMacControl,\n  KeyMacOption,\n};\n","import * as React from 'react';\r\nimport { useModifiers } from '../use-modifiers';\r\nimport { ModifierWin, ModifierMac } from '../modifiers';\r\nimport {\r\n  KeyWinShift,\r\n  KeyWinControl,\r\n  KeyWinAlt,\r\n  KeyWinWindows,\r\n} from './KeyWin';\r\nimport {\r\n  KeyMacShift,\r\n  KeyMacControl,\r\n  KeyMacOption,\r\n  KeyMacCommand,\r\n} from './KeyMac';\r\nimport './Modifiers.css';\r\n\r\nconst Modifiers: React.FC = () => {\r\n  const modifiers = useModifiers();\r\n  return (\r\n    <table className=\"Modifiers\">\r\n      <colgroup>\r\n        <col style={{ width: '8em' }} />\r\n        <col style={{ width: '5em' }} />\r\n        <col style={{ width: '5em' }} />\r\n        <col style={{ width: '6em' }} />\r\n      </colgroup>\r\n      <thead>\r\n        <tr>\r\n          <th><code>Shift</code></th>\r\n          <th><code>Control</code></th>\r\n          <th><code>Meta</code></th>\r\n          <th><code>Alt</code></th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr>\r\n          <td><KeyWinShift pressed={modifiers[ModifierWin.SHIFT]} /></td>\r\n          <td><KeyWinControl pressed={modifiers[ModifierWin.CONTROL]} /></td>\r\n          <td><KeyWinAlt pressed={modifiers[ModifierWin.ALT]} /></td>\r\n          <td><KeyWinWindows pressed={modifiers[ModifierWin.WINDOWS]} /></td>\r\n        </tr>\r\n        <tr>\r\n          <td><KeyMacShift pressed={modifiers[ModifierMac.SHIFT]} /></td>\r\n          <td><KeyMacControl pressed={modifiers[ModifierMac.CONTROL]} /></td>\r\n          <td><KeyMacOption pressed={modifiers[ModifierMac.OPTION]} /></td>\r\n          <td><KeyMacCommand pressed={modifiers[ModifierMac.COMMAND]} /></td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  );\r\n};\r\n\r\nexport default Modifiers;\r\n","import * as React from 'react';\r\nimport Modifiers from './Modifiers';\r\n\r\nconst App: React.FC = () => (\r\n  <div className=\"App\">\r\n    {/* <h1>Modifiers</h1>   */}\r\n    <Modifiers />\r\n  </div>\r\n);\r\n\r\nexport default App;\r\n","import * as React from 'react';\nimport { render } from 'react-dom';\nimport App from './components/App';\nimport './styles.css';\n\nconst rootElement = document.getElementById('root');\nrender(<App />, rootElement);\n"],"sourceRoot":""}